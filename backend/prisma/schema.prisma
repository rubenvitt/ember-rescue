generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bearbeiter {
  id                       String                   @id() @default(cuid())
  name                     String                   @unique
  active                   Boolean                  @default(true)
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @updatedAt
  fahrzeug_status_historie FahrzeugStatusHistorie[]
  einsatz                  Einsatz[]
  einsatztagebuch_eintrag  EinsatztagebuchEintrag[]
  Notizen                  Notiz[]
  Reminder                 Reminder[]

  @@map("bearbeiter")
}

model Fahrzeug {
  id                       String                   @id @default(cuid())
  funkrufname              String
  kapazitaet               Int
  aktuellerStatusId        String?
  status                   Status?                  @relation(fields: [aktuellerStatusId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  fahrzeug_status_historie FahrzeugStatusHistorie[]
  einsatz_fahrzeug         FahrzeugOnEinsatz[]
  Einsatz                  Einsatz[]
  organisation             String?
  fachaufgabe              String?
  verwaltungsstufe         String?
  fahrzeugTyp              FahrzeugTyp              @relation(fields: [fahrzeugTypId], references: [id])
  fahrzeugTypId            String
  istTemporaer             Boolean
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @updatedAt

  @@map("fahrzeuge")
}

model FahrzeugTyp {
  id           String     @id @default(cuid())
  label        String
  description  String
  grundzeichen String
  fahrzeuge    Fahrzeug[]
}

model FahrzeugStatusHistorie {
  id           String      @id() @default(cuid())
  zeitpunkt    DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  fahrzeugId   String?
  statusId     String?
  bearbeiterId String?
  einsatzId    String?
  bearbeiter   Bearbeiter? @relation(fields: [bearbeiterId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  status       Status?     @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  einsatz      Einsatz?    @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  fahrzeug     Fahrzeug?   @relation(fields: [fahrzeugId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("fahrzeugStatusHistorie")
}

model Einsatz {
  id                           String                    @id() @default(cuid())
  beginn                       DateTime
  ende                         DateTime?
  abgeschlossen                DateTime?
  createdAt                    DateTime                  @default(now())
  updatedAt                    DateTime                  @updatedAt
  bearbeiterId                 String?
  aufnehmendesRettungsmittelId String
  fahrzeug_status_historie     FahrzeugStatusHistorie[]
  bearbeiter                   Bearbeiter?               @relation(fields: [bearbeiterId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  aufnehmendes_rettungsmittel  Fahrzeug                  @relation(fields: [aufnehmendesRettungsmittelId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  einsatz_fahrzeug             FahrzeugOnEinsatz[]
  einsatztagebuch_eintrag      EinsatztagebuchEintrag[]
  einsatz_alarmstichwort       EinsatzOnAlarmstichwort[]
  Notiz                        Notiz[]
  Reminder                     Reminder[]
  einsatz_meta                 EinsatzMeta?

  @@map("einsaetze")
}

model EinsatzMeta {
  id String @id() @default(cuid())

  ort String?

  einsatzId String  @unique
  einsatz   Einsatz @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([einsatzId])
  @@map("einsatzMeta")
}

model FahrzeugOnEinsatz {
  id                     String                      @id() @default(cuid())
  einsatzbeginn          DateTime
  einsatzende            DateTime?
  createdAt              DateTime                    @default(now())
  updatedAt              DateTime                    @updatedAt
  einsatzId              String?
  fahrzeugId             String?
  fahrzeug               Fahrzeug?                   @relation(fields: [fahrzeugId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  einsatz                Einsatz?                    @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  einsatz_fahrzeug_kraft PersonOnFahrzeugOnEinsatz[]

  @@unique([einsatzId, fahrzeugId])
  @@map("fahrzeugOnEinsaetze")
}

model PersonOnFahrzeugOnEinsatz {
  id                String             @id() @default(cuid())
  fahrzeugfuehrer   Boolean
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  einsatzFahrzeugId String?
  personId          String?
  person            Person?            @relation(fields: [personId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  einsatz_fahrzeug  FahrzeugOnEinsatz? @relation(fields: [einsatzFahrzeugId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("personenOnEinsaetze")
}

model EinsatztagebuchEintrag {
  id                  String      @id() @default(cuid())
  timestamp           DateTime    @default(now())
  type                String
  content             String
  absender            String
  empfaenger          String
  archived            Boolean     @default(false)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  fortlaufende_nummer Int?
  einsatzId           String?
  bearbeiterId        String?
  einsatz             Einsatz?    @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  bearbeiter          Bearbeiter? @relation(fields: [bearbeiterId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([einsatzId, fortlaufende_nummer])
  @@index([absender])
  @@index([empfaenger])
  @@index([type])
  @@map("einsatztagebuchEintraege")
}

model Person {
  id                     String                      @id() @default(cuid())
  name                   String
  telefonnummer          String
  fuehrungskraft         Boolean
  istTemporaer           Boolean
  createdAt              DateTime                    @default(now())
  updatedAt              DateTime                    @updatedAt
  einsatz_fahrzeug_kraft PersonOnFahrzeugOnEinsatz[]
  person_qualifikation   PersonOnQualifikation[]

  @@map("personen")
}

model PersonOnQualifikation {
  id              String         @id() @default(cuid())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  personId        String?
  qualifikationId String?
  qualifikation   Qualifikation? @relation(fields: [qualifikationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  person          Person?        @relation(fields: [personId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("personenOnQualifikationen")
}

model Qualifikation {
  id                   String                  @id() @default(cuid())
  bezeichnung          String
  abkuerzung           String
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  person_qualifikation PersonOnQualifikation[]

  @@map("qualifikationen")
}

model Status {
  id                       String                   @id() @default(cuid())
  code                     String                   @unique
  bezeichnung              String
  beschreibung             String
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @updatedAt
  fahrzeug                 Fahrzeug[]
  fahrzeug_status_historie FahrzeugStatusHistorie[]

  @@index([code])
  @@map("status")
}

model EinsatzOnAlarmstichwort {
  id               String          @id() @default(cuid())
  einsatzId        String
  alarmstichwortId String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  einsatz          Einsatz?        @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  alarmstichwort   Alarmstichwort? @relation(fields: [alarmstichwortId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("einsatzOnAlarmstichworte")
}

model Alarmstichwort {
  id                     String                    @id() @default(cuid())
  bezeichnung            String
  beschreibung           String
  createdAt              DateTime                  @default(now())
  updatedAt              DateTime                  @updatedAt
  alarmstichwort_einsatz EinsatzOnAlarmstichwort[]

  @@map("alarmstichworte")
}

model Betroffene {
  id        String   @id() @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("betroffene")
}

model Secret {
  id        String   @id() @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("secrets")
}

model Notiz {
  id           String     @id() @default(cuid())
  content      String
  doneAt       DateTime?
  deletedAt    DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  bearbeiterId String
  bearbeiter   Bearbeiter @relation(fields: [bearbeiterId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  einsatzId    String
  einsatz      Einsatz    @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  reminderId   String?
  reminder     Reminder[]

  @@map("notizen")
}

model Reminder {
  id                String      @id() @default(cuid())
  reminderTimestamp DateTime
  notified          DateTime?
  read              DateTime?
  einsatzId         String
  einsatz           Einsatz     @relation(fields: [einsatzId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  bearbeiterId      String?
  bearbeiter        Bearbeiter? @relation(fields: [bearbeiterId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  noteId            String
  note              Notiz       @relation(fields: [noteId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("reminders")
}
